/**
 * @fileoverview gRPC-Web generated client stub for services.auth.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.12
// source: services/auth/v1/auth_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as services_auth_v1_auth_service_pb from '../../../services/auth/v1/auth_service_pb';


export class AuthServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSignUp = new grpcWeb.MethodDescriptor(
    '/services.auth.v1.AuthService/SignUp',
    grpcWeb.MethodType.UNARY,
    services_auth_v1_auth_service_pb.SignUpRequest,
    services_auth_v1_auth_service_pb.SignUpResponse,
    (request: services_auth_v1_auth_service_pb.SignUpRequest) => {
      return request.serializeBinary();
    },
    services_auth_v1_auth_service_pb.SignUpResponse.deserializeBinary
  );

  signUp(
    request: services_auth_v1_auth_service_pb.SignUpRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_auth_v1_auth_service_pb.SignUpResponse>;

  signUp(
    request: services_auth_v1_auth_service_pb.SignUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_auth_v1_auth_service_pb.SignUpResponse) => void): grpcWeb.ClientReadableStream<services_auth_v1_auth_service_pb.SignUpResponse>;

  signUp(
    request: services_auth_v1_auth_service_pb.SignUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_auth_v1_auth_service_pb.SignUpResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.auth.v1.AuthService/SignUp',
        request,
        metadata || {},
        this.methodDescriptorSignUp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.auth.v1.AuthService/SignUp',
    request,
    metadata || {},
    this.methodDescriptorSignUp);
  }

  methodDescriptorSignIn = new grpcWeb.MethodDescriptor(
    '/services.auth.v1.AuthService/SignIn',
    grpcWeb.MethodType.UNARY,
    services_auth_v1_auth_service_pb.SignInRequest,
    services_auth_v1_auth_service_pb.SignInResponse,
    (request: services_auth_v1_auth_service_pb.SignInRequest) => {
      return request.serializeBinary();
    },
    services_auth_v1_auth_service_pb.SignInResponse.deserializeBinary
  );

  signIn(
    request: services_auth_v1_auth_service_pb.SignInRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_auth_v1_auth_service_pb.SignInResponse>;

  signIn(
    request: services_auth_v1_auth_service_pb.SignInRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_auth_v1_auth_service_pb.SignInResponse) => void): grpcWeb.ClientReadableStream<services_auth_v1_auth_service_pb.SignInResponse>;

  signIn(
    request: services_auth_v1_auth_service_pb.SignInRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_auth_v1_auth_service_pb.SignInResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.auth.v1.AuthService/SignIn',
        request,
        metadata || {},
        this.methodDescriptorSignIn,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.auth.v1.AuthService/SignIn',
    request,
    metadata || {},
    this.methodDescriptorSignIn);
  }

  methodDescriptorRefreshToken = new grpcWeb.MethodDescriptor(
    '/services.auth.v1.AuthService/RefreshToken',
    grpcWeb.MethodType.UNARY,
    services_auth_v1_auth_service_pb.RefreshTokenRequest,
    services_auth_v1_auth_service_pb.RefreshTokenResponse,
    (request: services_auth_v1_auth_service_pb.RefreshTokenRequest) => {
      return request.serializeBinary();
    },
    services_auth_v1_auth_service_pb.RefreshTokenResponse.deserializeBinary
  );

  refreshToken(
    request: services_auth_v1_auth_service_pb.RefreshTokenRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_auth_v1_auth_service_pb.RefreshTokenResponse>;

  refreshToken(
    request: services_auth_v1_auth_service_pb.RefreshTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_auth_v1_auth_service_pb.RefreshTokenResponse) => void): grpcWeb.ClientReadableStream<services_auth_v1_auth_service_pb.RefreshTokenResponse>;

  refreshToken(
    request: services_auth_v1_auth_service_pb.RefreshTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_auth_v1_auth_service_pb.RefreshTokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.auth.v1.AuthService/RefreshToken',
        request,
        metadata || {},
        this.methodDescriptorRefreshToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.auth.v1.AuthService/RefreshToken',
    request,
    metadata || {},
    this.methodDescriptorRefreshToken);
  }

}

